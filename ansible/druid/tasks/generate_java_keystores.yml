- name: Create keystore for .<target_env>.network.tech TLS certificate
  shell: |
    openssl pkcs12 -export -in "{{druid_server_tls_pem_cert}}" -inkey "{{druid_server_tls_pem_key}}" -out /tmp/keystore.p12 -name "druid" -passout "pass:{{druid_keystore_password}}"
    keytool -importkeystore -srcstorepass "{{druid_keystore_password}}" -srckeystore /tmp/keystore.p12 -srcstoretype pkcs12 -destkeystore "{{druid_keystore_path}}" -storepass "{{druid_keystore_password}}"
  args:
    creates: "{{druid_keystore_path}}"

- name: Create truststore for .<target_env>.network.tech TLS certificate
  shell: keytool -noprompt -import -alias druid -file "{{druid_server_tls_pem_cert}}" -keystore "{{druid_truststore_path}}" -storepass "{{druid_keystore_password}}"
  args:
    creates: "{{druid_truststore_path}}"

- name: Create keystore for Kafka client
  shell: |
    openssl pkcs12 -inkey "{{kafka_clientkey_pem}}" -in "{{kafka_client_cert}}" -export -out /tmp/keystore.p12 -certfile "{{kafka_ca_cert}}" -passout "pass:{{kafka_keystore_password}}"
    keytool -importkeystore -destkeystore "{{kafka_keystore_path}}" -srcstorepass "{{kafka_keystore_password}}" -srckeystore /tmp/keystore.p12 -srcstoretype pkcs12 -storepass "{{kafka_keystore_password}}"
  args:
    creates: "{{kafka_keystore_path}}"

- name: Create truststore for Kafka client
  shell: keytool -noprompt -import -alias Cert -file "{{kafka_ca_cert}}" -keystore "{{kafka_truststore_path}}" -storepass "{{kafka_keystore_password}}"
  args:
    creates: "{{kafka_truststore_path}}"
